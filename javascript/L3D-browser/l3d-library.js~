
class L3D {
    color[][][] voxels;
    int side;
    int scale=40;
    PVector center;
    L3D()
    {
	side=8;
	voxels=new color[side][side][side];
	center=new PVector(scale*(side-1)/2, scale*(side-1)/2, scale*(side-1)/2);
    }
    void draw()
    {
	for (int x=0; x<side; x++)
	    for (int y=0; y<side; y++)
		for (int z=0; z<side; z++)
		    {
			pushMatrix();
			translate(scale*x-center.x, scale*y-center.y, scale* z-center.z);
			color voxelColor=voxels[x][y][z];
			stroke(255, 100);
			if (brightness(voxelColor)>0)
			    fill(voxelColor);
			else
			    noFill();
			box(scale);
			popMatrix();
		    }
    }
    void setVoxel(PVector pos)
    {
	if ((pos.x>=0)&&(pos.x<side))
	    if ((pos.y>=0)&&(pos.y<side))
		if ((pos.z>=0)&&(pos.z<side))
		    voxels[(int)pos.x][(int)pos.y][(int)pos.z]=col;
    }

    void background(color col)
    {
	for (int x=0; x<side; x++)
	    for (int y=0; y<side; y++)
		for (int z=0; z<side; z++)
		    voxels[x][y][z]=col;
    }

    void sphere(PVector center, float radius, color col)
    {
	float steps=30;
	for (float theta=0; theta<steps; theta++)
	    for (float phi=0; phi<steps; phi++)
		setVoxel( new PVector(center.x + radius * Math.sin((float) Math.PI *theta/ steps) * Math.cos((float) 2 * Math.PI *phi/ steps), 
				      center.y + radius * Math.sin((float) Math.PI *theta/ steps) * Math.sin((float) 2 * Math.PI *phi/ steps), 
				      center.z + radius * Math.cos((float) Math.PI *theta/ steps)), 
			  col);
    }
}
